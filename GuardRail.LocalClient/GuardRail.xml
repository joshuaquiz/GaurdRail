<?xml version="1.0"?>
<doc>
    <assembly>
        <name>GuardRail</name>
    </assembly>
    <members>
        <member name="T:GuardRail.LocalClient.App">
            <summary>
            Interaction logic for App.xaml
            </summary>
            <summary>
            App
            </summary>
        </member>
        <member name="M:GuardRail.LocalClient.App.#ctor">
            <summary>
            Initial app startup configuration.
            </summary>
        </member>
        <member name="M:GuardRail.LocalClient.App.Main">
            <summary>
            Application Entry Point.
            </summary>
        </member>
        <member name="M:GuardRail.LocalClient.Data.DataStore.SaveNew``1(``0,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GuardRail.LocalClient.Data.DataStore.UpdateExisting``1(``0,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GuardRail.LocalClient.Data.DataStore.DeleteExisting``1(``0,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GuardRail.LocalClient.Data.DataStore.Get``1(System.Linq.Expressions.Expression{System.Func{System.Linq.IQueryable{``0}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GuardRail.LocalClient.Data.DataStore.Dispose">
            <inheritdoc />
        </member>
        <member name="T:GuardRail.LocalClient.Data.Interfaces.IAddableItem">
            <summary>
            An item that can be added.
            </summary>
        </member>
        <member name="P:GuardRail.LocalClient.Data.Interfaces.IAddableItem.Guid">
            <summary>
            Guid is to be used in all systems for the global ID.
            This value is set automatically and should not be passed in for adds.
            </summary>
        </member>
        <member name="T:GuardRail.LocalClient.Data.Interfaces.IDataSink">
            <summary>
            A definition for a data sink.
            </summary>
        </member>
        <member name="M:GuardRail.LocalClient.Data.Interfaces.IDataSink.SaveNew``1(``0,System.Threading.CancellationToken)">
            <summary>
            Save a new item of type T.
            </summary>
            <typeparam name="T">The type to save a new of.</typeparam>
            <param name="item">The item to save a new of.</param>
            <param name="cancellationToken">The CancellationToken that can cancel the request.</param>
            <returns>Task of T</returns>
        </member>
        <member name="M:GuardRail.LocalClient.Data.Interfaces.IDataSink.UpdateExisting``1(``0,System.Threading.CancellationToken)">
            <summary>
            Update an existing item.
            </summary>
            <typeparam name="T">The type of item to update.</typeparam>
            <param name="item">The item to update.</param>
            <param name="cancellationToken">The CancellationToken that can cancel the request.</param>
            <returns>Task</returns>
        </member>
        <member name="M:GuardRail.LocalClient.Data.Interfaces.IDataSink.DeleteExisting``1(``0,System.Threading.CancellationToken)">
            <summary>
            Delete and existing item.
            </summary>
            <typeparam name="T">The type of item to delete.</typeparam>
            <param name="item">The item to update.</param>
            <param name="cancellationToken">The CancellationToken that can cancel the request.</param>
            <returns></returns>
        </member>
        <member name="M:GuardRail.LocalClient.Data.Interfaces.IDataSink.Get``1(System.Linq.Expressions.Expression{System.Func{System.Linq.IQueryable{``0}}},System.Threading.CancellationToken)">
            <summary>
            Retrieve data from the data sick.
            </summary>
            <typeparam name="T">The type to get.</typeparam>
            <param name="getExpression">The expression for how to get data.</param>
            <param name="cancellationToken">The CancellationToken that can cancel the request.</param>
            <returns>Task of IQueryable of T</returns>
        </member>
        <member name="T:GuardRail.LocalClient.Data.Interfaces.IDataStore">
            <summary>
            A definition for a data store.
            </summary>
        </member>
        <member name="M:GuardRail.LocalClient.Data.Interfaces.IDataStore.SaveNew``1(``0,System.Threading.CancellationToken)">
            <summary>
            Save a new item of type T.
            </summary>
            <typeparam name="T">The type to save a new of.</typeparam>
            <param name="item">The item to save a new of.</param>
            <param name="cancellationToken">The CancellationToken that can cancel the request.</param>
            <returns>Task of T</returns>
        </member>
        <member name="M:GuardRail.LocalClient.Data.Interfaces.IDataStore.UpdateExisting``1(``0,System.Threading.CancellationToken)">
            <summary>
            Update an existing item.
            </summary>
            <typeparam name="T">The type of item to update.</typeparam>
            <param name="item">The item to update.</param>
            <param name="cancellationToken">The CancellationToken that can cancel the request.</param>
            <returns>Task</returns>
        </member>
        <member name="M:GuardRail.LocalClient.Data.Interfaces.IDataStore.DeleteExisting``1(``0,System.Threading.CancellationToken)">
            <summary>
            Delete and existing item.
            </summary>
            <typeparam name="T">The type of item to delete.</typeparam>
            <param name="item">The item to update.</param>
            <param name="cancellationToken">The CancellationToken that can cancel the request.</param>
            <returns></returns>
        </member>
        <member name="M:GuardRail.LocalClient.Data.Interfaces.IDataStore.Get``1(System.Linq.Expressions.Expression{System.Func{System.Linq.IQueryable{``0}}},System.Threading.CancellationToken)">
            <summary>
            Retrieve data from the data sick.
            </summary>
            <typeparam name="T">The type to get.</typeparam>
            <param name="getExpression">The expression for how to get data.</param>
            <param name="cancellationToken">The CancellationToken that can cancel the request.</param>
            <returns>Task of IQueryable of T</returns>
        </member>
        <member name="T:GuardRail.LocalClient.Data.Local.EntityFrameWorkDataSink">
            <summary>
            An EntityFrameWork IDataSink implementation.
            </summary>
        </member>
        <member name="M:GuardRail.LocalClient.Data.Local.EntityFrameWorkDataSink.#ctor">
            <summary>
            Creates an EntityFrameWorkDataSink.
            </summary>
        </member>
        <member name="M:GuardRail.LocalClient.Data.Local.EntityFrameWorkDataSink.SaveNew``1(``0,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GuardRail.LocalClient.Data.Local.EntityFrameWorkDataSink.UpdateExisting``1(``0,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GuardRail.LocalClient.Data.Local.EntityFrameWorkDataSink.DeleteExisting``1(``0,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GuardRail.LocalClient.Data.Local.EntityFrameWorkDataSink.Get``1(System.Linq.Expressions.Expression{System.Func{System.Linq.IQueryable{``0}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GuardRail.LocalClient.Data.Local.EntityFrameWorkDataSink.Dispose">
            <inheritdoc />
        </member>
        <member name="T:GuardRail.LocalClient.Data.Remote.RemoteDataSink">
            <summary>
            A remote stored IDataSink implementation.
            </summary>
        </member>
        <member name="M:GuardRail.LocalClient.Data.Remote.RemoteDataSink.#ctor(GuardRail.LocalClient.Interfaces.IGuardRailFileProvider,GuardRail.LocalClient.Interfaces.IGuardRailApiClient)">
            <summary>
            A remote stored IDataSink implementation.
            </summary>
        </member>
        <member name="M:GuardRail.LocalClient.Data.Remote.RemoteDataSink.SaveNew``1(``0,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GuardRail.LocalClient.Data.Remote.RemoteDataSink.UpdateExisting``1(``0,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GuardRail.LocalClient.Data.Remote.RemoteDataSink.DeleteExisting``1(``0,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GuardRail.LocalClient.Data.Remote.RemoteDataSink.Get``1(System.Linq.Expressions.Expression{System.Func{System.Linq.IQueryable{``0}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:GuardRail.LocalClient.Data.Remote.RemoteDataSink.Dispose">
            <inheritdoc />
        </member>
        <member name="T:GuardRail.LocalClient.MainWindow">
            <summary>
            Interaction logic for MainWindow.xaml
            </summary>
            <summary>
            MainWindow
            </summary>
        </member>
        <member name="M:GuardRail.LocalClient.MainWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:GuardRail.LocalClient.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:GuardRail.LocalClient.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:GuardRail.LocalClient.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:GuardRail.LocalClient.Setup.SetupUserControl">
            <summary>
            Interaction logic for SetupUserControl.xaml
            </summary>
            <summary>
            SetupUserControl
            </summary>
        </member>
        <member name="M:GuardRail.LocalClient.Setup.SetupUserControl.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:GuardRail.LocalClient.StartupHelper">
            <summary>
            Helps with any startup actions or setup that needs to happen.
            </summary>
        </member>
        <member name="M:GuardRail.LocalClient.StartupHelper.Startup(GuardRail.Core.CommandLine.CommandLineArguments,GuardRail.LocalClient.MainWindow)">
            <summary>
            Helps with any startup actions or setup that needs to happen.
            </summary>
            <param name="commandLineArguments">Command line arguments passed to the main app.</param>
            <param name="mainWindow">The application's main window.</param>
        </member>
    </members>
</doc>
